1. Learn what is thread
2. Learn what is mutex
3. Learn what is data_races

args = [number_of_philosophers] [time_to_die] [time_to_eat] [time_to_sleep] [number_of_times_each_philosopher_must_eat]

TO DO:
About the logs of your program:
 • Any state change of a philosopher must be formatted as follows:
 ◦ timestamp_in_ms X has taken a fork
 ◦ timestamp_in_ms X is eating
 ◦ timestamp_in_ms X is sleeping
 ◦ timestamp_in_ms X is thinking
 ◦ timestamp_in_ms X died
 Replace timestamp_in_ms with the current timestamp in milliseconds
 and X with the philosopher number.

 • Adisplayed state message should not be mixed up with another message.

 • Amessage announcing a philosopher died should be displayed no more than 10 ms
 after the actual death of the philosopher.

TO  KNOW:
- fork = number of philo

- only can do eat/think/sleep, 1 in 1 time

- Each philosopher should be a thread

- if there only 1 philo, ther only 1 fork

- To prevent philosophers from duplicating forks, you should protect the forks state with a mutex for each of them

- eat -> using 2 fork

- eat -> take fork -> finish -> put back -> sleep -> think

- The simulation stops when a philosopher dies of starvation or all philo eat.

FUNCTION :
memset,
printf,
malloc,
free,
write,
usleep
gettimeofday
pthread_create,
pthread_detach
pthread_join
pthread_mutex_init,
pthread_mutex_destroy
pthread_mutex_lock,
pthread_mutex_unlock